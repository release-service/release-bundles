apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-push-snapshot-pushsourcecontainer-multiarch
spec:
  description: |
    Test push-snapshot with a multi-architecture main image and source container to ensure .src resolves without platform args.
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: setup-values
            image: quay.io/konflux-ci/release-service-utils:76021ef1e9f0f14397260ee24c9a43e37d3f83ac
            script: |
              #!/usr/bin/env sh
              set -eux

              mkdir "$(workspaces.data.path)/results"
              cat > "$(workspaces.data.path)"/snapshot.json << EOF
              {
                "application": "multiarch-app",
                "components": [
                  {
                    "name": "multi-comp",
                    "containerImage": "registry.io/multiarch-test@sha256:xyz789",
                    "repository": "prod-registry.io/prod-location",
                    "tags": ["multi-tag"],
                    "pushSourceContainer": true
                  }
                ]
              }
              EOF

              cat > "$(workspaces.data.path)"/data.json << EOF
              {
                "mapping": {}
              }
              EOF
    - name: run-task
      taskRef:
        name: push-snapshot
      params:
        - name: snapshotPath
          value: snapshot.json
        - name: dataPath
          value: data.json
        - name: retries
          value: "0"
        - name: resultsDirPath
          value: results
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - setup
    - name: check-result
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:76021ef1e9f0f14397260ee24c9a43e37d3f83ac
            script: |
              #!/usr/bin/env sh
              set -eux

              # Expected digest for .src (from mocks.sh: sha256:098765...cba for .src)
              cat > "$(workspaces.data.path)"/cosign_expected_calls.txt << EOF
              copy -f registry.io/multiarch-test:sha256-1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef.src prod-registry.io/prod-location:sha256-1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef.src
              copy -f registry.io/multiarch-test@sha256:xyz789 prod-registry.io/prod-location:multi-tag
              copy -f registry.io/multiarch-test:sha256-1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef.src prod-registry.io/prod-location:multi-tag-source
              EOF

              if [ "$(md5sum < "$(workspaces.data.path)"/cosign_expected_calls.txt)" != "$(md5sum < "$(workspaces.data.path)/mock_cosign.txt")" ]; then
                echo "Error: Expected cosign calls do not match actual calls"
                cat "$(workspaces.data.path)/mock_cosign.txt"
                echo "Expected:"
                cat "$(workspaces.data.path)"/cosign_expected_calls.txt
                exit 1
              fi

              # Check oras calls include .src resolution without platform
              grep "resolve --registry-config .* registry.io/multiarch-test:sha256-1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef.src$" "$(workspaces.data.path)/mock_oras.txt" || {
                echo "Error: .src resolution call missing or incorrect"
                cat "$(workspaces.data.path)/mock_oras.txt"
                exit 1
              }

              # Fail if --platform appears in .src resolve
              if grep "resolve --registry-config .* --platform .* registry.io/multiarch-test:sha256-1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef.src" "$(workspaces.data.path)/mock_oras.txt"; then
                echo "Error: .src resolution should not use --platform"
                cat "$(workspaces.data.path)/mock_oras.txt"
                exit 1
              fi
      runAfter:
        - run-task
